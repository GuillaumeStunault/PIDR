theory Lottery
begin

builtins: hashing, asymmetric-encryption, signing

// Creer une paire de clé
rule Creer_pk:
    [ Fr(sk) ]
  -->
    [ !SK(sk), Out(pk(sk)) ]

// Créer le secret
rule Creer_secret:
	[ Fr(secret) ]
  --> 
  	[ Hash(h(secret), $A), Out(h(secret)) ]


rule Init1:
	[ SK(sk), mise ]
  -->
  	[ Out(sign('mise', sk))]

rule Init2:
  [ In(sign('mise1', skA)), !SK(skA), In(sign('mise2', skB)), !SK(skB) ]
  --[Neq(skA,skB), Eq('mise1','mise2')]->
  [ BC('mise1', 'mise2', skA, skB) ]

rule InitBC:
[ BC('mise1', 'mise2', skA, skB) ]
-->
[ W(A, 'mise1'), W(B,'mise2') ]

rule Win:
[ W(A,'mise1'), W(B,'mise2') ]
-->
[ T1('0',A,B) ]

rule envoiBC:
[ m ]
-->
[ BC(m) ]


rule Match:
[ T1('0',A,B), secretA, Hash(h(secret),A) ]
--Eq(h(secretA),h(secret))->
[ T2('0',A,B,secretA) ]

rule Match2:
[ T2('0',A,B,secretA), secretB, Hash(h(secret),B) ]
--Eq(h(secretB),h(secret))->
[ T3('0',A,B,secretA, secretB) ]

rule Winner:
[ T3('0',A,B,secretA, secretB) ]
-->
[ W('epsilon', A) ]
end
